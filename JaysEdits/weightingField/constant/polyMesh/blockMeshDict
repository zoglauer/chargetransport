/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (0 0 0) //simple 0
    (80.5 0 0) //simple 1
    (80.5 80.5 0) //simple 2
    (0 80.5 0) //simple 3
    (0 0 15.0) //simple 4
    (80.5 0 15.0) //simple 5
    (80.5 80.5 15.0) //simple 6
    (0 80.5 15.0) //simple 7



//Front side of detector w/ vertical strips.



		//#0 (strip vertices)
		(3.5 4.25 0) //8
		(5.0 4.25 0) //9
		(5.0 76.25 0) //10
		(3.5 76.25 0) //11
 
		(3.5 4.25 15.0) //12
		(5.0 4.25 15.0) //13
		(5.0 76.25 15.0) //14
		(3.5 76.25 15.0) //15

	  (3.5 0 0) //16
    (5.0 0 0) //17
    (5.0 0 15.0) //18
    (3.5 0 15.0) //19

    (3.5 80.5 0) //20
    (5.0 80.5 0) //21
    (5.0 80.5 15.0) //22
    (3.5 80.5 15.0) //23

		(0 4.25 0) //24
		(0 4.25 15.0) //24
		(0 76.25 0) //26
		(0 76.25 15.0) //27

    (80.5 4.25 0) //28
    (80.5 4.25 15.0) //29
    (80.5 76.25 0) //30
    (80.5 76.25 15.0) //31

);

blocks
(

//detector volume

//	hex (0 1 2 3 4 5 6 7) (100 100 30) simpleGrading (1 1 1) //(805 805 30) // possibly 1610

	hex (0 16 8 24 4 19 12 25) (10 10 10) simpleGrading (1 1 1)
  hex (24 8 11 26 25 12 15 27) (10 10 10) simpleGrading (1 1 1)
  hex (26 11 20 3 27 15 23 7) (10 10 10) simpleGrading (1 1 1)
  hex (16 17 9 8 19 18 13 12) (10 10 10) simpleGrading (1 1 1)
	hex (8 9 10 11 12 13 14 15) (10 10 10) simpleGrading (1 1 1)
//hex (15 14 22 23 11 10 21 20) (10 10 10) simpleGrading (1 1 1)
  hex (11 10 21 20 15 14 22 23) (10 10 10) simpleGrading (1 1 1)
  hex (17 1 28 9 18 5 29 13) (10 10 10) simpleGrading (1 1 1)
  hex (9 28 30 10 13 29 31 14) (10 10 10) simpleGrading (1 1 1)
  hex (10 30 2 21 14 31 6 22) (10 10 10) simpleGrading (1 1 1)
/*
 hex (0 16 8 24 4 19 12 25) (70 85 30) simpleGrading (1 1 1)
  hex (24 8 11 26 25 12 15 27) (70 1440 30) simpleGrading (1 1 1)
  hex (26 11 20 3 27 15 23 7) (70 85 30) simpleGrading (1 1 1)
  hex (16 17 9 8 19 18 13 12) (30 85 30) simpleGrading (1 1 1)
  hex (8 9 10 11 12 13 14 15) (30 1440 30) simpleGrading (1 1 1)
  hex (15 14 22 23 11 10 21 20) (30 85 30) simpleGrading (1 1 1)
  hex (17 1 28 9 18 5 29 13) (1510 85 30) simpleGrading (1 1 1)
  hex (9 28 30 10 13 29 31 14) (1510 1440 30) simpleGrading (1 1 1)
  hex (10 30 2 21 14 31 6 22) (1510 85 30) simpleGrading (1 1 1)
*/
);

edges
(
);


patches
(
/*
		symmetryPlane side1
        (
            (0 4 7 3)
				)

		symmetryPlane side2
				(
            (2 6 5 1)
				)

		symmetryPlane side3
        (
  		 			(1 5 4 0)
				)

		symmetryPlane side4
				(
            (3 7 6 2)
        )
*/
		fixedValue strip0
				(
				(8 11 10 9)
				)
                                /*
                fixedValue strip1
                                (
                                (12 15 14 13)
                                )
                                /**/

		fixedValue back1
				(
				(4 19 12 25)
				)

    fixedValue back2
        (
        (25 12 15 27)
				)

    fixedValue back3
        (
				(27 15 23 7)
        )

    fixedValue back4
        (
        (19 18 13 12)
        )

/*
    fixedValue back5
        (
        (12 13 14 15)
        )
/**/

    fixedValue back6
        (
        (15 23 22 14)
        )

    fixedValue back7
        (
        (18 5 29 13)
        )

    fixedValue back8
        (
        (13 29 31 14)
        )

    fixedValue back9
        (
        (14 31 6 22)
        )

		fixedValue front1
				(
        (0 24 8 16)      
				)

    fixedValue front2
        (
        (24 8 11 26)
        )

    fixedValue front3
        (
        (26 3 20 11)
        )

    fixedValue front4
        (
        (16 8 9 17)
        )

    fixedValue front6 //no front5 because strip
        (
        (11 10 21 20)
        )

    fixedValue front7
        (
        (17 9 28 1)
        )

    fixedValue front8
        (
        (9 10 30 28)
        )

    fixedValue front9
        (
        (10 21 2 30)
        )

);

boundary
(

		strip0
		{
				type fixedValue;
				faces
				(
				(8 11 10 9)
				);
		}
		strip1
		{
				type fixedValue;
				faces
				(
				(12 15 14 13)
				);
		}

		back1
		{
				type fixedValue;
				faces
				(
					(4 19 12 25)
				);
		}
    back2
    {
        type fixedValue;
        faces
        (
					(25 12 15 27)
				);
		}
    back3
    {
        type fixedValue;
        faces
        (
					(27 15 23 7)
				);
		}
    back4
    {
        type fixedValue;
        faces
        (
					(19 18 13 12)
				);
		}
/*
    back5
    {
        type fixedValue;
        faces
        (
					(12 13 14 15)
				);
		}
/**/
    back6
    {
        type fixedValue;
        faces
        (
					(11 10 21 20)
				);
		}
    back7
    {
        type fixedValue;
        faces
        (
					(18 5 29 13)
				);
		}
    back8
    {
        type fixedValue;
        faces
        (
					(13 29 28 9)
				);
		}
    back9
    {
        type fixedValue;
        faces
        (
					(14 31 6 22)
				);
		}



		front1
		{
				type fixedValue;
				faces
				(
					(0 24 8 16)
				);
		}
    front2
    {
        type fixedValue;
        faces
        (
					(24 26 11 8)
				);
		}
    front3
    {
        type fixedValue;
        faces
        (
					(26 3 20 11)
				);
		}
    front4
    {
        type fixedValue;
        faces
        (
					(16 8 9 17)
				);
		}
    front6
    {
        type fixedValue;
        faces
        (					
					(11 20 21 22)
				);
		}
    front7
    {
        type fixedValue;
        faces
        (
					(17 9 28 1)
				);
		}
    front8
    {
        type fixedValue;
        faces
        (
					(9 10 30 28)
				);
		}
    front9
    {
        type fixedValue;
        faces
        (
					(10 21 2 30)
				);
		}

/*		
    fixedWalls
    {
        type symmetryPlane;
        faces
        (
            (0 4 7 3)
            (2 6 5 1)
            (1 5 4 0)
						(3 7 6 2)
        );
    }
*/

);

mergePatchPairs
(
);

// ************************************************************************* //
